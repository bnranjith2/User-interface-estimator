{"version":3,"sources":["components/Input/index.jsx","components/Buttons/index.jsx","constants/data.js","components/Dropdown/index.jsx","components/Addcomponent/index.jsx","components/AddSwiper/index.jsx","storage/storage.js","components/Card/index.jsx","components/Showitems/index.jsx","components/ViewTabs/index.jsx","components/Swiper/index.jsx","utils/crop-download.js","components/ImageCrop/index.jsx","components/DragAndDropImage/index.jsx","components/Sidebar/index.jsx","components/Home/index.jsx","App.js","index.js"],"names":["Input","className","value","onChange","placeholder","type","min","max","maxlength","minlength","classnames","maxLength","minLength","defaultProps","Button","label","onClick","button","DropdownData","Timeunit","id","name","Dropdown","options","useState","option","setOption","isOpen","setIsOpen","closeList","dropdown","disabled","map","item","index","listSetitem","length","Addcomponent","data","setName","time","setTime","modalClass","setModalClass","countName","setcountName","countTime","setCountTime","display","setDisplay","title","setTitle","count","increment","e","target","closeModal","addcomponent","payload","estTime","estUnit","style","timeUnit","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","dataObj","imgPayLoad","showData","res","localStorage","getItem","console","log","JSON","parse","getLocalStoreData","localStoreData","push","payLoad","currentData","stringify","setItem","clear","Card","imgsrc","card","src","ShowItems","screenNum","content","displayCropped","setDisplayCropped","croppedDetails","setCroppedDetails","useEffect","showitemscontainer","components","x","componentSrc","height","dimension","screenSrc","attributes","ViewTabs","openViewTabs","setOpenViewTabs","ScreenContext","React","createContext","Swipe","screens","setScreens","viewTabs","setViewTabs","screenData","getLocalStroageData","totalScreenNumber","Object","keys","val2","addScreen","spaceBetween","slidesPerView","navigation","allowTouchMove","pagination","clickable","onSlideChange","slot","screen","flag","image64toCanvasRef","canvasRef","image64","pixelCrop","canvas","width","ctx","getContext","image","Image","onload","drawImage","y","document","createElement","ImageCrop","props","cropdata","handleCropEnd","setState","cropEnd","state","currentCropData","handleCropComplete","bool","handleOnCrop","newCrop","crop","caption","changeState","imagePreviewCanvas","current","srcImg","handleEditClick","storedData","screenDetails","handleDownloadClick","base64Data","fileExtension","substring","indexOf","canvasCroppedData64","toDataURL","fileName","base64String","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","base64StringtoFile","createRef","img","defaultCrop","screenPayload","croppedImage","holdState","componentName","getData","this","altTitle","cropData","alt","onDragEnd","onCompleted","cropInfo","position","left","top","border","classname","color","textAlign","bottom","backgroundColor","fontSize","borderRadius","croppedImg","uuid","ref","Component","contextType","DragAndDropImage","acceptFileType","multipleFiles","isCrop","imgSrc","setImgSrc","setOutlineData","setImageLoaded","setScreenData","srcName","unit","onLoad","getLocalStoreageData","accept","multiple","onDrop","acceptedFile","currentFile","reader","FileReader","addEventListener","result","readAsDataURL","getRootProps","getInputProps","sidebar__tool","Sidebar","history","iconCrop","setIconCrop","iconHistory","setIconHistory","handleClick","selection","sidebar","Home","setGetImg","setCrop","setSidebar","setHistory","cropValues","obj","useContext","info","scrNum","imgSrcName","locked","objectFit","maxWidth","checkToolSelected","storeImage","undefined","imgData","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8293b848.chunk.js","sourcesContent":["import classnames from \"classnames\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./input.css\";\r\n\r\nconst defaultProps = {\r\n  className: \"\",\r\n  placeholder: \"\",\r\n  type: \"text\"\r\n};\r\n\r\nconst propTypes = {\r\n  className: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number\r\n};\r\n\r\nconst Input = ({ className, value, onChange, placeholder, type, min, max, maxlength, minlength }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={classnames({\r\n        'input': true,\r\n        [className]: className\r\n      })}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      value={value}\r\n      min = {min}\r\n      max = {max}\r\n      maxLength = {maxlength}\r\n      minLength = {minlength}\r\n    />\r\n  );\r\n};\r\n\r\nInput.defaultProps = defaultProps;\r\nInput.propTypes = propTypes;\r\nexport default Input;\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./button.css\";\r\n\r\nconst defaultProps = {\r\n  className: \"\",\r\n  onClick: () => {}\r\n};\r\n\r\nconst propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nconst Button = ({className, label, onClick }) => {\r\n  return (\r\n    <button\r\n      className={classnames({\r\n        button: true,\r\n        [className]: className\r\n      })}\r\n      onClick={onClick}\r\n      type=\"button\"\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = defaultProps;\r\nButton.propTypes = propTypes;\r\nexport default Button;\r\n","export const DropdownData = {\r\n    Timeunit: [\r\n      { id: 1, name: \"Minuets\" },\r\n      { id: 2, name: \"Hours\" },\r\n      { id: 3, name: \"Days\" },\r\n      { id: 4, name: \"Weeks\" },\r\n      { id: 5, name: \"Months\" },\r\n      { id: 6, name: \"Years\" }\r\n    ]\r\n  };\r\n  \r\n  \r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport \"./dropdown.css\";\r\n\r\nconst defaultProps = {\r\n    options: [],\r\n    onChange: () => { },\r\n    value: \"\",\r\n    className: \"\"\r\n};\r\n\r\nconst propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    className: PropTypes.string\r\n};\r\n\r\nconst Dropdown = ({ value, options, onChange, className }) => {\r\n    const [option, setOption] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const closeList = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const listSetitem = item => {\r\n        setOption(item);\r\n        setIsOpen(false);\r\n        onChange(item);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={classnames({ dropdown: true, [className]: className })}\r\n            onClick={() => closeList()}\r\n        >\r\n            <div className=\"dropdown__header\" onClick={() => closeList()}>\r\n                <input\r\n                    className=\"dropdown__header__input\"\r\n                    type=\"text\"\r\n                    value={option}\r\n                    placeholder={value}\r\n                    disabled\r\n                />\r\n\r\n                <div className=\"dropdown__header__arrow-down\" />\r\n            </div>\r\n\r\n            {isOpen && (\r\n                <div className=\"dropdown__list\">\r\n                    {options.map((item, index) => (\r\n                        <li\r\n                            className={\r\n                                option === item.name\r\n                                    ? \"dropdown__list__item dropdown__list__item--active\"\r\n                                    : \"dropdown__list__item dropdown__list__item--inactive\"\r\n                            }\r\n                            key={index}\r\n                            onClick={() => {\r\n                                listSetitem(item.name);\r\n                            }}\r\n                        >\r\n                            {item.name}\r\n                        </li>\r\n                    ))}\r\n                    {options.length == 0 && (\r\n                        <div className=\"dropdown__list__empty\">\r\n                            No items to be displayed\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n// }\r\n\r\nDropdown.defaultProps = defaultProps;\r\nDropdown.propTypes = propTypes;\r\nexport default Dropdown;\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./addcomponent.css\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Buttons\";\r\nimport { DropdownData } from \"../../constants/data\";\r\nimport Dropdown from \"../Dropdown\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nconst Addcomponent = ({ onChange, data }) => {\r\n  debugger;\r\n  const [name, setName] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [timeUnit, setTimeUnit] = useState(\"\");\r\n\r\n  const [modalClass, setModalClass] = useState(\"\");\r\n\r\n  const [countName, setcountName] = useState(0);\r\n  const [countTime, setCountTime] = useState(0);\r\n  const [display, setDisplay] = useState(\"none\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  let count = 0;\r\n\r\n  const increment = (e, id) => {\r\n    switch (id) {\r\n      case 1:\r\n        count = 30 - e.target.value.length;\r\n        setcountName(count);\r\n        break;\r\n      case 2:\r\n        count = 5 - e.target.value.length;\r\n        setCountTime(count);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalClass(\"addcomponent--closemodal\");\r\n    onChange(\"CLOSE\");\r\n  };\r\n\r\n  const handleOnClickSave = () => {\r\n    debugger;\r\n    if(data.payload!=\"\"){\r\n      onChange({value:data.payload, name:data.payload.name, timeUnit:data.payload.estUnit, time:data.payload.estTime });\r\n      closeModal();\r\n      setDisplay(\"none\");\r\n    }else if (name.length && time.length && title != \"\") {\r\n      debugger;\r\n      onChange({ name: name, timeUnit: title, time: time });\r\n      closeModal();\r\n      setDisplay(\"none\");\r\n    } else {\r\n      setDisplay(\"flex\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        addcomponent: true,\r\n        [modalClass]: true,\r\n      })}\r\n    >\r\n      <Button label={\"X\"} className=\"button--close\" onClick={closeModal} />\r\n      <header className=\"addcomponent__header\">Component</header>\r\n      <div className=\"addcomponent__input\">\r\n        <div className=\"addcomponent__input__name\">\r\n          Name\r\n          <Input\r\n            value={data.payload ? data.payload.name : name}\r\n            onChange={e => {\r\n            \r\n              data.payload?data.payload.name = e.target.value:setName(e.target.value);\r\n              increment(e, 1);\r\n            }}\r\n            minlength={1}\r\n            maxlength={30}\r\n          />\r\n          <p className=\"addcomponent__input__counter\">{countName}/30</p>\r\n        </div>\r\n        <div className=\"addcomponent__input__time\">\r\n          Estimated time for development\r\n          <Input\r\n            type={\"number\"}\r\n            minlength={1}\r\n            maxlength={5}\r\n            value={data.payload ? data.payload.estTime : time}\r\n            onChange={e => {\r\n              data.payload?data.payload.estTime = e.target.value:setTime(e.target.value);\r\n              increment(e, 2);\r\n            }}\r\n          ></Input>\r\n          <p className=\"addcomponent__input__counter\">{countTime}/5</p>\r\n        </div>\r\n        <div className=\"addcomponent__input__time-unit\">\r\n          Estimated time unit for development\r\n        </div>\r\n        <Dropdown\r\n          value={data.payload ? data.payload.estUnit : \"Select catogery\"}\r\n          options={DropdownData.Timeunit}\r\n          onChange={e => {\r\n            data.payload?data.payload.estUnit= e:setTitle(e);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"alert-message\" style={{ display: `${display}` }}>\r\n        <div className=\"alert-message__icon\">\r\n          <ErrorOutlineIcon />\r\n        </div>\r\n        <div className=\"alert-message__text\">Fill All The Required Fields.</div>\r\n      </div>\r\n      <Button\r\n        label={\"Save\"}\r\n        className=\"button--save\"\r\n        onClick={handleOnClickSave}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addcomponent;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\nimport Home from \"../Home\";\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\nconst AddSwiper = ({onChange}) => {\r\n    const [state,setState]=useState()\r\n  return (\r\n     <SwiperSlide>\r\n        <Home\r\n          onChange={e=>{\r\n            onChange(true)\r\n            }}\r\n        />\r\n      </SwiperSlide>\r\n  );\r\n};\r\n\r\nexport default AddSwiper;\r\n","let dataObj = [];\r\nlet imgPayLoad=''\r\nexport const showData = () => {\r\n  // console.log('--------------------------------')\r\n\r\n  let res = localStorage.getItem(\"data\");\r\n  console.log(JSON.parse(res));\r\n  return JSON.parse(res);\r\n};\r\nexport const imgData = data => {\r\n  //     console.log('--------------------------------')\r\n  //    localStorage.setItem('tabs',[...tabsData,data])\r\n  //     tabsData = localStorage.getItem('tabs')\r\n};\r\nexport const addScreen = data => {\r\n  let val2 = JSON.stringify(data);\r\n  localStorage.setItem(\"data\", val2);\r\n  // console.log(showItem())\r\n  // console.log( data)\r\n};\r\n\r\n// ----------------------------------------------------------------------------------------------------------------------\r\nexport const getLocalStoreData = () => {\r\n  // console.log('--------------------------------')\r\n  let res = localStorage.getItem(\"localData\");\r\n \r\n if(res){\r\n   imgPayLoad=JSON.parse(res);\r\n }\r\n  return JSON.parse(res);\r\n};\r\n\r\nexport const localStoreData = data => {\r\n     debugger;\r\n  if (data.type == \"imgSrcNamePush\") {\r\n    dataObj = []\r\n    // debugger;\r\n    imgPayLoad?dataObj.push(...imgPayLoad,data.payLoad):dataObj.push(data.payLoad);\r\n    let currentData = JSON.stringify(dataObj);\r\n    localStorage.setItem(\"localData\", currentData);\r\n\r\n\r\n\r\n  } else {\r\n      dataObj=[]\r\n      localStorage.clear();\r\n      imgPayLoad=data.payLoad\r\n      let currentData = JSON.stringify(data.payLoad);\r\n      localStorage.setItem(\"localData\", currentData); \r\n  }\r\n};\r\n\r\n\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./card.css\";\r\n\r\n// const defaultProps = {\r\n//     card: \"\"\r\n// };\r\n\r\n// const propTypes = {\r\n//     className: PropTypes.string,\r\n//     componentname:PropTypes.string.isRequired,\r\n//     time:PropTypes.string.isRequired,\r\n//     timeunit:PropTypes.string.isRequired\r\n// };\r\n\r\nconst Card = ({ className, name, estTime, estUnit, imgsrc }) => {\r\n  // console.log(imgsrc);\r\n  const returnItems = () => {\r\n    return (\r\n      <section className={classnames({ card: true, [className]: className })}>\r\n        <div className=\"card__image-wrapper\">\r\n          <img src={imgsrc} className=\"card__image-wrapper__img\" />\r\n        </div>\r\n        <div className=\"card__content-wrapper\">\r\n          <div>Name: {name}</div>\r\n          <div>Time assigned: {estTime}</div>\r\n          <div>Time Unit: {estUnit}</div>\r\n        </div>\r\n      \r\n      </section>\r\n    );\r\n  };\r\n\r\n  const error = () => {\r\n    return (\r\n      <section className={classnames({ card: true, [className]: className })}>\r\n        <div className=\"error-message\">No Components are Cropped</div>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  return <div>{name == \"\" ? error() : returnItems()}</div>;\r\n};\r\n\r\n// Card.defaultProps = defaultProps;\r\n// Card.propTypes = propTypes;\r\nexport default Card;\r\n","import classnames from \"classnames\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./showitems.css\";\r\nimport Card from \"../Card\";\r\nimport Button from \"../Buttons\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { showData, getLocalStoreData } from \"../../storage/storage\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nconst defaultProps = {};\r\n\r\nconst propTypes = {};\r\n\r\nconst ShowItems = ({\r\n  onChange,\r\n  screenNum,\r\n  display,\r\n  content,\r\n  className,\r\n  title,\r\n}) => {\r\n  // debugger\r\n  //   console.log(\"I am also triggered\");\r\n  const [modalClass, setModalClass] = useState(\"\");\r\n  const [displayCropped, setDisplayCropped] = useState(false);\r\n  const [croppedDetails, setCroppedDetails] = useState(\"\");\r\n  let count = 0;\r\n\r\n  const closeModal = () => {\r\n    setModalClass(\"showitemscontainer--close-modal\");\r\n    onChange();\r\n  };\r\n  const displayCroppedImages = () => {};\r\n\r\n  const handleClick = () => {\r\n    setDisplayCropped(true);\r\n  };\r\n  const data = getLocalStoreData();\r\n  // console.log(screenNum);\r\n  // console.log(data);\r\n  //   debugger;\r\n\r\n  useEffect(() => {\r\n    if (getLocalStoreData()) {\r\n      const getLocalStroageData = getLocalStoreData();\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        showitemscontainer: true,\r\n        [className]: className,\r\n      })}\r\n    >\r\n      <header className=\"showitemscontainer__header\">\r\n        {title}\r\n        <Button\r\n          label={<CloseIcon />}\r\n          className=\"button--close-components\"\r\n          onClick={closeModal}\r\n        />\r\n        <div\r\n          onClick={() => {\r\n            setDisplayCropped(false);\r\n          }}\r\n          className={classnames({\r\n            \"showitemscontainer--cropped-img__close-modal\": true,\r\n            [\"showitemscontainer--cropped-img__close-modal--active\"]: displayCropped,\r\n          })}\r\n        >\r\n          <KeyboardBackspaceIcon />\r\n        </div>\r\n      </header>\r\n\r\n      {className != \"showitemscontainer--tabs\" ? (\r\n        <div className=\"showitemscontainer__item-wrapper\">\r\n          {data[0] ? (\r\n            data[screenNum].dataObj.components.map(x => {\r\n              return (\r\n                <Card\r\n                  name={x.name}\r\n                  estTime={x.estTime}\r\n                  estUnit={x.estUnit}\r\n                  imgsrc={x.componentSrc}\r\n                  height={x.dimension.height}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Card name={\"\"} />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"showitemscontainer--tabs__wrapper\">\r\n          {data[0] &&\r\n            data.map((x, index) => {\r\n              // debugger;\r\n\r\n              return (\r\n                <div className=\"showitemscontainer--tabs__img-container\">\r\n                  <img\r\n                    value={count++}\r\n                    src={x.dataObj.screenSrc}\r\n                    onClick={e => {\r\n                      // debugger;\r\n                      // console.log(e);\r\n                      setCroppedDetails(e.target.attributes[0].value);\r\n\r\n                      handleClick();\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          <div className=\"showitemscontainer__item-wrapper__header\">Hello</div>\r\n          {displayCropped ? (\r\n            <div className=\"showitemscontainer showitemscontainer--cropped-img\">\r\n              {data[croppedDetails].dataObj.components.map(data => {\r\n                // debugger;\r\n\r\n                return (\r\n                  <div className=\"wrapper\">\r\n                    <Card\r\n                      className={\"card--no-border\"}\r\n                      name={data.name}\r\n                      estTime={data.estTime}\r\n                      estUnit={data.estUnit}\r\n                      imgsrc={data.componentSrc}\r\n                      height={data.dimension.height}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ShowItems.defaultProps = defaultProps;\r\n// ShowItems.propTypes = propTypes;\r\nexport default ShowItems;\r\n","import React,{useState} from \"react\";\r\nimport ShowItems from \"../Showitems\";\r\nimport \"./viewtabs.css\";\r\nimport { showData } from \"../../storage/storage\";\r\nimport Button from \"../Buttons\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport classnames from \"classnames\";\r\nconst ViewTabs = ({onChange}) => {\r\n  const [openViewTabs, setOpenViewTabs] = useState(true);\r\n\r\n\r\n  const data = showData();\r\n  // console.log(\"op\"+openViewTabs);\r\n  const handleClick=()=>{\r\nreturn <ShowItems className={\"showitemscontainer__item-wrapper--cropped-img\"} flag={true}/>\r\n\r\n  }\r\n  return (\r\n<div>\r\n    {openViewTabs?(<ShowItems onChange={()=>{\r\n      setOpenViewTabs(false);\r\n      onChange();\r\n    }} title={\"Screen Tabs\"} className=\"showitemscontainer--tabs\">\r\n  \r\n   </ShowItems>):\"\"}\r\n   </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default ViewTabs;\r\n","import React, { Component, useEffect, useState, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\r\nimport uuid from \"react-uuid\";\r\n// import \"swiper/swiper.scss\";\r\n// import \"swiper/swiper.scss\";\r\n// import \"swiper/components/navigation/navigation.scss\";\r\n// import \"swiper/components/pagination/pagination.scss\";\r\n// import \"swiper/components/scrollbar/scrollbar.scss\";\r\nimport \"./swiper.css\";\r\nimport Home from \"../Home\";\r\nimport AddSwiper from \"../AddSwiper\";\r\nimport { addScreen, showItem, addComponent } from \"../../storage/storage\";\r\nimport ShowItems from \"../Showitems\";\r\nimport Hamburger from \"../Hamburger\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ViewTabs from \"../ViewTabs\";\r\nimport { getLocalStoreData } from \"../../storage/storage\";\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\nexport const ScreenContext = React.createContext();\r\nexport const ScreenNumberContext = React.createContext();\r\nconst Swipe = () => {\r\n  const [screenCount, setScreenCount] = useState(0);\r\n  const [screens, setScreens] = useState([{ name: \"firstscreen\" }]);\r\n  const [history, setHistory] = useState(false);\r\n  const [slideNum, setSlideNum] = useState(1);\r\n  const [viewTabs, setViewTabs] = useState(false);\r\n  // const [outLineData, setOutLineData] = useState();\r\n  const [currentScreenNum, setCurrentScreenNum] = useState();\r\n\r\n  const [screenData, setScreenData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (getLocalStoreData()) {\r\n      const getLocalStroageData = getLocalStoreData();\r\n      const totalScreenNumber = [];\r\n      getLocalStroageData.map(item => {\r\n        totalScreenNumber.push({ name: Object.keys(item) });\r\n      });\r\n      setScreens(totalScreenNumber);\r\n    }\r\n    if (screenData.length) {\r\n      addScreen(screenData);\r\n    }\r\n  }, [screenData]);\r\n  return (\r\n    <div>\r\n      <Swiper\r\n        spaceBetween={0}\r\n        slidesPerView={1}\r\n        navigation\r\n        allowTouchMove={false}\r\n        pagination={{ clickable: true }}\r\n        onSlideChange={e => {}}\r\n        slot=\"container-start\"\r\n      >\r\n        {screens.map((screen, index) => (\r\n          <SwiperSlide slot=\"container-start\">\r\n            <Home\r\n              screen={screen}\r\n              screenNum={index}\r\n              onChange={e => {\r\n                setScreens([{ name: \"newscreen\" }, ...screens]);\r\n              }}\r\n            ></Home>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n\r\n      {screens.length > 1 ? (\r\n        <div\r\n          className=\"home__table-list\"\r\n          onClick={() => {\r\n            setViewTabs(true);\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {viewTabs ? (\r\n        <ViewTabs\r\n          flag={true}\r\n          onChange={() => {\r\n            setViewTabs(false);\r\n          }}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swipe;\r\n","export function downloadBase64File(base64Data, filename) {\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href', base64Data);\r\n    element.setAttribute('download', filename);\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  }\r\n  \r\n  export function base64StringtoFile(base64String, filename) {\r\n      var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n          bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n      while(n--){\r\n          u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new File([u8arr], filename, {type:mime});\r\n  }\r\n  \r\n  export function extractImageFileExtensionFromBase64(base64Data){\r\n      return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\"))\r\n  }\r\n  \r\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop){\r\n    const canvas = canvasRef // document.createElement('canvas');\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const image = new Image()\r\n    image.src = image64\r\n    image.onload = function() {\r\n        ctx.drawImage(\r\n          image,\r\n          pixelCrop.x,\r\n          pixelCrop.y,\r\n          pixelCrop.width,\r\n          pixelCrop.height,\r\n          0,\r\n          0,\r\n          pixelCrop.width,\r\n          pixelCrop.height\r\n        )\r\n      }\r\n  }\r\n\r\n  export function image64CroppedData(image64, pixelCrop){\r\n   \r\n    const image = new Image()\r\n    image.src = image64\r\n   return image\r\n  }\r\n\r\n  \r\n  export const canvasReference = document.createElement('canvas') // or your own canvas\r\n  export const base64ImageData = \"\" // fill in your own base64 image data here.\r\n  export const myCrop = {\r\n        x: 100,\r\n        y: 100,\r\n        width: 350,\r\n       height: 350\r\n  }\r\n  \r\n  \r\n  image64toCanvasRef(canvasReference, base64ImageData, myCrop);\r\n  ","import React, { Component, useEffect } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"./imagecrop.css\";\r\nimport { ScreenContext } from \"../Swiper\";\r\nimport {\r\n  image64toCanvasRef,\r\n  extractImageFileExtensionFromBase64,\r\n  base64StringtoFile,\r\n  downloadBase64File,\r\n  image64CroppedData,\r\n} from \"../../utils/crop-download\";\r\nimport { getLocalStoreData, localStoreData } from \"../../storage/storage\";\r\nimport Addcomponent from \"../Addcomponent\";\r\nimport uuid from \"react-uuid\";\r\nimport DottedBorder from \"../DottedBorder\";\r\n\r\nclass ImageCrop extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.imagePreviewCanvas = React.createRef();\r\n\r\n    this.state = {\r\n      screenDetails: props.screenDetails,\r\n      srcImg: props.img,\r\n      crop: props.defaultCrop,\r\n      screenPayload: \"\",\r\n      cropEnd: false,\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n      croppedImage: \"\",\r\n      holdState: [],\r\n      changeState: false,\r\n      currentCropData: \"\",\r\n      componentName: [],\r\n      value:''\r\n    };\r\n  }\r\n\r\n  static contextType = ScreenContext;\r\n  cropdata = getLocalStoreData();\r\n\r\n  handleCropEnd = e => {\r\n    this.setState({\r\n      cropEnd: !this.state.cropEnd,\r\n      currentCropData: \"\",\r\n    });\r\n  };\r\n\r\n  handleCropComplete = () => {\r\n    this.setState({ bool: !this.state.bool });\r\n  };\r\n\r\n  handleOnCrop = newCrop => {\r\n    this.setState({\r\n      crop: newCrop,\r\n      x: newCrop.x,\r\n      y: newCrop.y,\r\n      width: newCrop.width,\r\n      height: newCrop.height,\r\n      caption: [],\r\n      changeState: false,\r\n    });\r\n    const canvasRef = this.imagePreviewCanvas.current;\r\n    image64toCanvasRef(canvasRef, this.state.srcImg, newCrop);\r\n  };\r\n  handleEditClick = e => {\r\n    const value = e.target.attributes[1].value;\r\n   this.setState({value:value})\r\n    console.log(value);\r\n    const storedData = getLocalStoreData();\r\n    this.setState({\r\n      currentCropData:\r\n        storedData[this.state.screenDetails.screenNum][\"dataObj\"].components[\r\n          value\r\n        ],\r\n    });\r\n\r\n    this.setState({ cropEnd: !this.state.cropEnd });\r\n  };\r\n  handleDownloadClick = () => {\r\n    const canvasRef = this.imagePreviewCanvas.current;\r\n    const fileExtension = extractImageFileExtensionFromBase64(\r\n      this.state.srcImg\r\n    );\r\n    const canvasCroppedData64 = canvasRef.toDataURL(\"image/\" + fileExtension);\r\n    const fileName = \"previewFile\" + fileExtension;\r\n    const NewCroppedFile = base64StringtoFile(this.state.srcImg, fileName);\r\n    //  downloadBase64File(canvasCroppedData64, NewCroppedFile);\r\n    return canvasCroppedData64;\r\n  };\r\n  componentDidMount() {\r\n    const getData = getLocalStoreData();\r\n    this.setState({\r\n      holdState:\r\n        getData[this.state.screenDetails.screenNum][\"dataObj\"].components,\r\n    });\r\n  }\r\n  render() {\r\n    const { altTitle } = this.props;\r\n    const { crop } = this.state;\r\n    const { bool } = this.state;\r\n    const { onChange } = this.props;\r\n    const { cropData } = this.props;\r\n    let dimenson;\r\n    let value = 0;\r\n    // const screenPayload = this.context;\r\n\r\n    return (\r\n      <div>\r\n        <ReactCrop\r\n          src={this.state.srcImg}\r\n          alt={altTitle}\r\n          crop={crop}\r\n          onChange={this.handleOnCrop}\r\n          onDragEnd={this.handleCropEnd}\r\n          onCompleted={() => {\r\n            this.setState({\r\n              bool: !this.state.bool,\r\n              cropEnd: !this.state.cropEnd,\r\n            });\r\n          }}\r\n        >\r\n          {this.state.holdState.map((cropInfo, index) => (\r\n            <div\r\n              className=\"croppedBox\"\r\n              style={{\r\n                position: \"absolute\",\r\n                width: cropInfo.dimension.width,\r\n                height: cropInfo.dimension.height,\r\n                left: cropInfo.dimension.left,\r\n                top: cropInfo.dimension.top,\r\n                border: \"2px dotted white\",\r\n              }}\r\n            >\r\n             \r\n              <div\r\n                className=\"crop__tag\"\r\n                value={value++} //if you chang the locatio\r\n                onClick={this.handleEditClick}\r\n                classname=\"reactcrop__details\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"20px\",\r\n                  color: \"white\",\r\n                  textAlign: \"center\",\r\n                  height: \"20px\",\r\n                  left: cropInfo.dimension.width,\r\n                  bottom: cropInfo.dimension.height,\r\n                  backgroundColor: \"#5dbcd2\",\r\n                  fontSize: \"15px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              >\r\n                c\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </ReactCrop>\r\n\r\n        {this.state.cropEnd ? (\r\n          <Addcomponent\r\n            data={{ type: \"UPDATE\", payload: this.state.currentCropData }}\r\n            onChange={e => {\r\n              if (e == \"CLOSE\") {\r\n                this.setState({ cropEnd: !this.state.cropEnd });\r\n              } else {\r\n                const getData = getLocalStoreData();\r\n                const croppedImg = this.handleDownloadClick();\r\n                this.setState({\r\n                  componentName: [...this.state.componentName, e[0]],\r\n                });\r\n                getData.map((data, index) => {\r\n                  debugger;\r\n                  if (index == this.state.screenDetails.screenNum) {\r\n                    if (e.value) {\r\n                      data[\"dataObj\"].components[this.state.value].estTime =\r\n                        e.time;\r\n                      data[\"dataObj\"].components[this.state.value].estUnit =\r\n                        e.timeUnit;\r\n                      data[\"dataObj\"].components[this.state.value].name =\r\n                        e.name;\r\n                    } else {\r\n                      data[\"dataObj\"].components.push({\r\n                        id: uuid(),\r\n                        name: e.name,\r\n                        estTime: e.time,\r\n                        estUnit: e.timeUnit,\r\n                        dimension: {\r\n                          top: this.state.y,\r\n                          left: this.state.x,\r\n                          height: this.state.height,\r\n                          width: this.state.width,\r\n                        },\r\n                        componentSrc: croppedImg,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n\r\n                localStoreData({ type: \"imgDataPush\", payLoad: getData });\r\n                this.setState({\r\n                  holdState:\r\n                    getData[this.state.screenDetails.screenNum][\"dataObj\"]\r\n                      .components,\r\n                  cropEnd: !this.state.cropEnd,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <canvas className=\"canvas__display\" ref={this.imagePreviewCanvas} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCrop;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"./image-container.css\";\r\nimport Button from \"../Buttons\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport ImageCrop from \"../ImageCrop\";\r\nimport Addcomponent from \"../Addcomponent\";\r\nimport classnames from \"classnames\";\r\nimport { getLocalStoreData } from \"../../storage/storage\";\r\nimport DottedBorder from \"../DottedBorder\";\r\n\r\nconst DragAndDropImage = ({\r\n  acceptFileType,\r\n  screenDetails,\r\n  multipleFiles,\r\n  onChange,\r\n  isCrop,\r\n  bool,\r\n}) => {\r\n  console.log(screenDetails.screenNum);\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [outlineData, setOutlineData] = useState();\r\n  // const [fileNmae,setFilename]\r\n  const [imgLoaded, setImageLoaded] = useState(false);\r\n  const [cropInfo, setCropInfo] = useState();\r\n\r\n  const [screenData, setScreenData] = useState();\r\n\r\n  const cropValues = { unit: \"px\", x: 1000, y: 800, width: 0 };\r\n\r\n  const handleOnDrop = acceptedFile => {\r\n    const currentFile = acceptedFile[0];\r\n    //console.log(currentFile)\r\n\r\n    // setFilename(currentFile);\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      () => {\r\n        setImgSrc(reader.result);\r\n        onChange(reader.result, currentFile);\r\n      },\r\n      false\r\n    );\r\n    reader.readAsDataURL(currentFile);\r\n  };\r\n  const handleImgLoad = () => {\r\n    setImageLoaded(true);\r\n    const getLocalStoreageData = getLocalStoreData();\r\n    setOutlineData(\r\n      getLocalStoreageData[screenDetails.screenNum][\"dataObj\"].components\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (getLocalStoreData()) {\r\n      const getLocalStoreageData = getLocalStoreData();\r\n      getLocalStoreageData.map((item, index) => {\r\n        if (index === screenDetails.screenNum) {\r\n          const srcName = item[\"dataObj\"].name;\r\n          const screenNum = index;\r\n          setScreenData({ screenNum, srcName });\r\n          setImgSrc(item[\"dataObj\"].screenSrc);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {imgSrc ? (\r\n        isCrop ? (\r\n          <div>\r\n            <ImageCrop\r\n              screenDetails={screenData}\r\n              img={imgSrc}\r\n              altTitle={\"Your Uploaded Image\"}\r\n              defaultCrop={cropValues}\r\n            \r\n            ></ImageCrop>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n         \r\n            <img\r\n              className=\"img\"\r\n              src={imgSrc}\r\n              alt=\"Your Uploaded Design\"\r\n              onLoad={handleImgLoad}\r\n              style={{\r\n                // display: \"none\",\r\n              }}\r\n            />\r\n          \r\n          <div>\r\n          \r\n              </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Dropzone\r\n          accept={acceptFileType}\r\n          multiple={multipleFiles}\r\n          onDrop={handleOnDrop}\r\n        >\r\n          {({ getRootProps, getInputProps }) => (\r\n            <section>\r\n              <div\r\n                className={classnames({ sidebar__tool: true })}\r\n                className={\"image-container\"}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <div>\r\n                  {bool ? <Button className={\"button--add\"} label={\"+\"} /> : \"\"}\r\n                </div>\r\n                <div\r\n                  className={classnames({ \"image-container__title\": !bool })}\r\n                >\r\n                  Insert An Image\r\n                </div>\r\n              </div>\r\n            </section>\r\n          )}\r\n        </Dropzone>\r\n      )}\r\n       \r\n    </div>\r\n  );\r\n};\r\nexport default DragAndDropImage;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport classnames from \"classnames\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport AddToQueueIcon from \"@material-ui/icons/AddToQueue\";\r\nimport { showItem } from \"../../storage/storage\";\r\nimport ShowItems from \"../Showitems\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport { getLocalStoreData, localStoreData } from \"../../storage/storage\";\r\nconst Sidebar = ({ crop, history, onChange,screenNum }) => {\r\n  const [iconColor, setIconColor] = useState(\"sidebar__tool--crop\");\r\n  const [iconCrop, setIconCrop] = useState(\"sidebar__tool--crop\");\r\n  const [iconHistory, setIconHistory] = useState(\"sidebar__tool--history\");\r\n  \r\n\r\n  const handleClick = selection => {\r\n    switch (selection) {\r\n      case 1:\r\n        setIconCrop(\"sidebar__tool--active\");\r\n        setIconHistory(\"sidebar__tool--history\");\r\n        break;\r\n      case 2:\r\n        setIconCrop(\"sidebar__tool--crop\");\r\n        setIconHistory(\"sidebar__tool--active\");\r\n        break;\r\n    }\r\n  };\r\n\r\n    useEffect(()=>{\r\n      const data=getLocalStoreData();\r\n      // console.log(data);\r\n      // console.log(screenNum)\r\n      // const checkData=data[screenNum];\r\n      \r\n      if(data!=null && data[screenNum]){\r\n\r\n        onChange('CROP')\r\n        handleClick(1)\r\n      }\r\n\r\n   \r\n    },[])\r\n  // const handleClick = (e) => {\r\n  //   setIconColor(\"sidebar__tool--crop-active\")\r\n  // }\r\n  const handleClickHistory = () => {\r\n    onChange();\r\n    \r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        sidebar: true,\r\n        [\"sidebar--activate\"]: crop,\r\n      })}\r\n    >\r\n      <div\r\n        className={classnames({\r\n          sidebar__tool: true,\r\n          [iconCrop]: crop,\r\n        })}\r\n        onClick={() => {\r\n          onChange(\"CROP\");\r\n          handleClick(1);\r\n          \r\n         \r\n        }}\r\n      >\r\n        <CropFreeIcon> </CropFreeIcon>\r\n      </div>\r\n      <div\r\n        className=\"sidebar__tool sidebar__tool--add-file\"\r\n        onClick={() => onChange(\"ADD_SCREEN\")}\r\n      >\r\n        <AddToQueueIcon />\r\n      </div>\r\n      <div\r\n        className={classnames({\r\n          sidebar__tool: true,\r\n          [iconHistory]: crop,\r\n        })}\r\n        onClick={() => {\r\n          handleClickHistory();\r\n          // let res = showItem()\r\n          // console.log(res)\r\n        }}\r\n      >\r\n        <QueryBuilderIcon />\r\n      </div>\r\n  {/* <div\r\n    onClick={e => {\r\n      console.log(e);\r\n      onChange(\"RELOAD\");\r\n    }}\r\n  >\r\n    <ReplayIcon />\r\n  </div> */}\r\n</div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./home.css\";\r\nimport DragAndDropImage from \"../DragAndDropImage\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport ImageCrop from \"../ImageCrop\";\r\nimport ShowItems from \"../Showitems\";\r\nimport { imgData } from \"../../storage/storage\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { ScreenContext } from \"../Swiper\";\r\nimport Addcomponent from \"../Addcomponent\";\r\nimport Hamburger from \"../Hamburger\";\r\nimport { localStoreData, getLocalStoreData } from \"../../storage/storage\";\r\n\r\nconst Home = ({ onChange, data, screenNum }) => {\r\n  const [imgSrc, setGetImg] = useState();\r\n  const [srcName,   ] = useState(\"\");\r\n  const [crop, setCrop] = useState();\r\n  const [croppedData, setCroppedData] = useState();\r\n\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const [history, setHistory] = useState(false);\r\n  const cropValues = { unit: \"px\", x: 1000, y: 800, width: 0 };\r\n\r\n  const screenPayload = useContext(ScreenContext);\r\n  let value = 0;\r\n  const obj = {};\r\n  const storeImage = (img, data) => {\r\n    // debugger;\r\n    obj[\"dataObj\"] = {\r\n      name: data.name,\r\n      screenSrc: img,\r\n      components: [],\r\n    };\r\n    localStoreData({ type: \"imgSrcNamePush\", payLoad: obj });\r\n  };\r\n\r\n  const checkToolSelected = value => {\r\n    //  debugger;\r\n    switch (value) {\r\n      case \"RELOAD\":\r\n        setGetImg(\"\");\r\n        setSidebar(false);\r\n        break;\r\n      case \"CROP\":\r\n        return (\r\n          <ImageCrop\r\n            screenDetails={{ screenNum, srcName }}\r\n            scrNum={screenNum}\r\n            img={imgSrc}\r\n            cropData={data}\r\n            altTitle={\"Your Uploaded Image\"}\r\n            defaultCrop={cropValues}\r\n            onChange={e => {}}\r\n          />\r\n        );\r\n        break;\r\n      case \"ADD_SCREEN\":\r\n        return (\r\n          <ImageCrop\r\n            screenDetails={{ screenNum, srcName }}\r\n            imgSrcName={srcName}\r\n            img={imgSrc}\r\n            cropData={data}\r\n            altTitle={\"Your Uploaded Image\"}\r\n            defaultCrop={cropValues}\r\n            locked={true}\r\n            onChange={e => {\r\n              // onChange(\"ADD_SCREEN\");\r\n              console.log(\"Home:\" + screenNum);\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n      case \"TIMER\":\r\n        return (\r\n          <div>\r\n            <ImageCrop\r\n              screenDetails={{ screenNum, srcName }}\r\n              imgSrcName={srcName}\r\n              img={imgSrc}\r\n              cropData={data}\r\n              altTitle={\"Your Uploaded Image\"}\r\n              defaultCrop={cropValues}\r\n              locked={true}\r\n              onChange={e => {}}\r\n            />\r\n          </div>\r\n        );\r\n\r\n        break;\r\n\r\n      default:\r\n        return (\r\n          <img\r\n            src={imgSrc}\r\n            style={{\r\n              objectFit: \"contain\",\r\n              maxWidth: \"100%\",\r\n            }}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getLocalStoreData()) {\r\n      setSidebar(true);\r\n      const info = getLocalStoreData();\r\n      console.log(info);\r\n      // setOutLineData(info);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__image-container\">\r\n        <div className=\"home__image-container--wrapper\">\r\n          {imgSrc ? (\r\n            checkToolSelected(crop)\r\n          ) : (\r\n            <DragAndDropImage\r\n              screenDetails={{ screenNum, srcName }}\r\n              accept=\"image/*\"\r\n              multiple={false}\r\n              onChange={(img, data) => {\r\n               \r\n                storeImage(img, data);\r\n                setGetImg(img);\r\n                setSidebar(true);\r\n              }}\r\n              bool={true}\r\n              isCrop={crop}\r\n            ></DragAndDropImage>\r\n          )}\r\n        </div>\r\n        {history ? (\r\n          <ShowItems\r\n            title={\"Components\"}\r\n            className={\"\"}\r\n            screenNum={screenNum}\r\n            onChange={() => {\r\n              setHistory(false);\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <Sidebar\r\n          crop={sidebar}\r\n          screenNum={screenNum}\r\n          onChange={e => {\r\n            // debugger;\r\n            console.log(e);\r\n            if (e == undefined) {\r\n              setHistory(true);\r\n            } else {\r\n              setCrop(e);\r\n              console.log(\"i am triggered here also\");\r\n            }\r\n            if (e == \"ADD_SCREEN\") {\r\n              onChange();\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      {imgSrc ? imgData(imgSrc) : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Examplecontainer from \"./containers/Examplecontainer\";\r\nimport Home from './components/Home';\r\nimport Addcomponent from \"./components/Addcomponent\";\r\nimport Example from './components/Swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport Swipe from \"./components/Swiper\";\r\nimport ShowItems from \"./components/Showitems\";\r\nimport {addScreen} from './storage/storage'\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div>\r\n    <Swipe/>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}